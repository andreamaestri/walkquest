{"version":3,"file":"bundle.js","sources":["../../walkquest/static/js/services/api.js","../../walkquest/static/js/services/map.js","../../walkquest/static/js/main.js"],"sourcesContent":["class ApiService {\n    static async init() {\n        // Any initialization logic\n    }\n\n    static async filterWalks(params) {\n        const response = await fetch('/api/walks/filter', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(params)\n        });\n        return response.json();\n    }\n\n    static async getWalkGeometry(walkId, zoom) {\n        const response = await fetch(`/api/walks/${walkId}/geometry?zoom=${zoom}`);\n        return response.json();\n    }\n}\n\nexport default ApiService;\n","import mapboxgl from 'mapbox-gl';\n\nconsole.log('MapService module initializing...', {\n    version: mapboxgl.version,\n    supported: mapboxgl.supported()\n});\n\nclass MapService {\n    static async initialize(container = 'map', config = {}) {\n        console.log('Starting MapService initialization...', { config });\n\n        try {\n            // Validate Mapbox support\n            if (!mapboxgl.supported()) {\n                throw new Error('Mapbox GL JS not supported in this browser');\n            }\n\n            // Get and validate token\n            let mapboxToken = config.mapboxToken;\n            if (!mapboxToken) {\n                // Try to get config from different possible script tags\n                const configScripts = [\n                    document.getElementById('id_config-data'),  // Django json_script default\n                    document.getElementById('config-data'),     // Custom ID\n                ];\n                \n                const configScript = configScripts.find(script => script?.textContent);\n                console.log('Config script elements:', {\n                    found: configScripts.map(script => !!script),\n                    content: configScript?.textContent\n                });\n                \n                if (!configScript) {\n                    throw new Error('Config script tag not found - verify template includes {{ config|json_script:\"config-data\" }}');\n                }\n                \n                try {\n                    const scriptConfig = JSON.parse(configScript.textContent);\n                    mapboxToken = scriptConfig.mapboxToken;\n                } catch (e) {\n                    console.error('Failed to parse config:', e);\n                    throw new Error(`Failed to parse config: ${e.message}`);\n                }\n            }\n            \n            if (!mapboxToken || mapboxToken === '{{ MAPBOX_TOKEN }}') {\n                throw new Error('Invalid Mapbox token - check Django settings');\n            }\n            \n            // Validate container\n            const mapContainer = typeof container === 'string' ? \n                document.getElementById(container) : container;\n            \n            console.log('Map container:', {\n                found: !!mapContainer,\n                id: container,\n                width: mapContainer?.offsetWidth,\n                height: mapContainer?.offsetHeight,\n                visible: mapContainer?.offsetParent !== null\n            });\n            \n            if (!mapContainer) {\n                throw new Error(`Map container '${container}' not found in DOM`);\n            }\n            \n            if (mapContainer.offsetWidth === 0 || mapContainer.offsetHeight === 0) {\n                console.warn('Map container has zero dimensions - check CSS');\n            }\n\n            // Initialize map\n            mapboxgl.accessToken = mapboxToken;\n            console.log('Creating map instance with token:', mapboxToken.slice(0, 8) + '...');\n            \n            const mapOptions = {\n                container: mapContainer,\n                style: 'mapbox://styles/mapbox/streets-v12',\n                center: [-4.85, 50.4],\n                zoom: 9.5,\n                ...config.map\n            };\n            \n            console.log('Creating map with options:', mapOptions);\n            const map = new mapboxgl.Map(mapOptions);\n\n            // Set up promise to handle map loading\n            const mapLoaded = new Promise((resolve, reject) => {\n                map.once('load', () => {\n                    console.log('Map load event fired');\n                    resolve();\n                });\n\n                setTimeout(() => {\n                    reject(new Error('Map initialization timed out after 10s'));\n                }, 10000);\n            });\n\n            // Set up event handlers\n            map.on('styledata', () => {\n                const style = map.getStyle();\n                console.log('Style loaded:', {\n                    name: style.name,\n                    version: style.version,\n                    sources: Object.keys(style.sources || {})\n                });\n            });\n\n            map.on('sourcedata', (e) => {\n                if (e.isSourceLoaded) {\n                    console.log('Source loaded:', e.sourceId);\n                }\n            });\n\n            map.on('error', (e) => {\n                console.error('Mapbox error:', {\n                    message: e.error?.message,\n                    type: e.error?.type,\n                    source: e.source?.id\n                });\n            });\n\n            // Wait for map to load\n            try {\n                await mapLoaded;\n                console.log('Map successfully initialized');\n                return map;\n            } catch (error) {\n                console.error('Map loading failed:', error);\n                throw error;\n            }\n\n        } catch (error) {\n            const errorDetails = {\n                message: error.message,\n                stack: error.stack,\n                type: error.type || 'unknown'\n            };\n            console.error('Failed to initialize map:', errorDetails);\n            throw error;\n        }\n    }\n\n    static createNavigationControl() {\n        return new mapboxgl.NavigationControl();\n    }\n}\n\nexport default MapService;\n","// Import npm packages\nimport Alpine from 'alpinejs';\nimport intersect from '@alpinejs/intersect';\nimport morph from '@alpinejs/morph';\nimport 'htmx.org';\nimport \"Icon\";\nimport ApiService from './services/api.js';\nimport MapService from './services/map.js';\n\nconsole.log('Main script initializing...');\n\n// Initialize Alpine plugins\nAlpine.plugin(intersect);\nAlpine.plugin(morph);\n\n// Helper to safely load and initialize components\nconst loadComponent = async (name, importPath) => {\n    try {\n        console.log(`Loading ${name} component...`);\n        const module = await import(importPath);\n        if (!module || !module.default) {\n            throw new Error(`Component ${name} must have a default export`);\n        }\n        return module.default;\n    } catch (error) {\n        console.error(`Failed to load ${name}:`, error);\n        return () => ({ error: true });\n    }\n};\n\n// Initialize Alpine before registering components\nconsole.log('Initializing Alpine...');\n\n// Register Alpine components and stores\ndocument.addEventListener('alpine:init', async () => {\n    console.log('Alpine initialization started');\n    \n    try {\n        // Register stores first\n        console.log('Registering Alpine stores...');\n        \n        Alpine.store('walks', {\n            selectedWalk: null,\n            selectedWalkId: null,\n            loading: false,\n            items: [],\n            setSelectedWalk(walk) {\n                this.selectedWalk = walk;\n                this.selectedWalkId = walk?.id;\n            }\n        });\n    \n        Alpine.store('globals', {\n            fullscreen: false,\n            mobileMenu: {\n                isOpen: false,\n                toggleMenu() {\n                    this.isOpen = !this.isOpen;\n                }\n            }\n        });\n    \n        Alpine.store('ui', { \n            showSidebar: false,\n            searchQuery: '',\n            error: null,\n            isLoading: false,\n            mapLoading: false,\n            loadingStates: {\n                path: false,\n                search: false,\n                walks: new Set()\n            }\n        });\n    \n        console.log('Stores initialized');\n    \n        // Initialize services\n        console.log('Initializing services...');\n        await ApiService.init();\n    \n        try {\n            // Load components sequentially to maintain order\n            const loading = await loadComponent('Loading', './components/Loading.js');\n            const mobileMenu = await loadComponent('MobileMenu', './components/MobileMenu.js');\n            const walkInterface = await loadComponent('WalkInterface', './components/WalkInterface.js');\n    \n            // Enhance components with default state and an init method if missing\n            const enhanceComponent = (component, defaults = {}) => () => ({\n                ...defaults,\n                ...component,\n                init() {\n                    if (typeof component.init === 'function') {\n                        component.init.call(this);\n                    }\n                }\n            });\n    \n            // Register enhanced components with Alpine\n            Alpine.data('loading', enhanceComponent(loading, { \n                loading: false, \n                loadingStates: [],\n                error: null,\n                isLoading: false\n            }));\n            \n            Alpine.data('mobileMenu', enhanceComponent(mobileMenu, { \n                isOpen: false,\n                toggleMenu() {\n                    this.isOpen = !this.isOpen;\n                }\n            }));\n            \n            Alpine.data('walkInterface', enhanceComponent(walkInterface, {\n                isLoading: false,\n                error: null,\n                mapLoading: false,\n                showSidebar: false,\n                loadingStates: {\n                    path: false,\n                    walks: new Set()\n                }\n            }));\n            \n            Alpine.data('globalState', () => ({\n                ...Alpine.store('ui'),\n                ...Alpine.store('walks'),\n                ...Alpine.store('globals'),\n                get walks() { return Alpine.store('walks').items; }\n            }));\n            \n            console.log('Components registered successfully');\n        } catch (error) {\n            console.error('Failed to register components:', error);\n        }\n    } catch (error) {\n        console.error('Error during Alpine initialization:', error);\n    }\n});\n\n// Initialize Alpine\nAlpine.start();\n\n// Load other modules\nconst moduleImports = {\n    'motion-helpers': () => import('./motion-helpers.js'),\n    'project': () => import('./project.js'),\n    'walkCardMixin': () => import('./walkCardMixin.js'),\n    'walk-animations': () => import('./walk-animations.js'),\n    'custom-layer-handler': () => import('./custom-layer-handler.js')\n};\n\n// Load modules sequentially to avoid bundling issues\nconst loadModules = async () => {\n    try {\n        for (const [name, importFn] of Object.entries(moduleImports)) {\n            await importFn();\n            console.log(`Loaded module: ${name}`);\n        }\n        console.log('Modules loaded successfully');\n        document.dispatchEvent(new Event('motion:ready'));\n    } catch (error) {\n        console.error('Failed to load modules:', error);\n    }\n};\n\nloadModules();\n\nconsole.log('Main script setup complete');\n"],"names":["ApiService","init","filterWalks","params","response","fetch","method","headers","body","JSON","stringify","json","getWalkGeometry","walkId","zoom","console","log","version","mapboxgl","supported","Alpine","plugin","intersect","morph","loadComponent","name","importPath","module","default","Error","error","document","addEventListener","store","selectedWalk","selectedWalkId","loading","items","setSelectedWalk","walk","id","fullscreen","mobileMenu","isOpen","toggleMenu","showSidebar","searchQuery","isLoading","mapLoading","loadingStates","path","search","walks","Set","walkInterface","enhanceComponent","component","defaults","arguments","length","undefined","call","data","start","moduleImports","motion-helpers","project","walkCardMixin","walk-animations","custom-layer-handler","loadModules","importFn","Object","entries","dispatchEvent","Event"],"mappings":"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"}