# Generated by Django 5.1.3 on 2024-12-02 20:36

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import tagulous.models.fields
import tagulous.models.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='WalkCategoryTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('slug',), name='unique_category_slug')],
            },
            bases=(tagulous.models.models.BaseTagModel, models.Model),
        ),
        migrations.CreateModel(
            name='Adventure',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Name of your epic quest', max_length=255, verbose_name='Title')),
                ('description', models.TextField(help_text="Chronicle your adventure's tale", verbose_name='Description')),
                ('start_date', models.DateField(help_text='When the walk begins', verbose_name='Start Date')),
                ('end_date', models.DateField(help_text='When the walk concludes', verbose_name='End Date')),
                ('difficulty_level', models.CharField(choices=[('NOVICE WANDERER', 'Novice Wanderer'), ("GREY'S PATHFINDER", "Grey's Pathfinder"), ('TRAIL RANGER', 'Trail Ranger'), ("WARDEN'S ASCENT", "Warden's Ascent"), ('MASTER WAYFARER', 'Master Wayfarer')], db_index=True, help_text='Choose your challenge level', max_length=20, verbose_name='Difficulty')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('related_categories', tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, force_lowercase=True, help_text='Categories related to this adventure', space_delimiter=False, to='walks.walkcategorytag')),
            ],
            options={
                'verbose_name': 'adventure',
                'verbose_name_plural': 'adventures',
                'ordering': ['-created_at'],
                'permissions': [('can_create_featured_adventure', 'Can create featured adventure')],
            },
        ),
        migrations.CreateModel(
            name='Walk',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('walk_id', models.SlugField(help_text="URL-friendly name (e.g. 'caradon-hill-to-trethevy-quoit')", max_length=255, unique=True)),
                ('walk_name', models.CharField(db_index=True, default='Unnamed Walk', max_length=255)),
                ('title', models.CharField(default='Untitled Walking Route', help_text='The title of this walking route', max_length=255, verbose_name='Title')),
                ('description', models.TextField(default='This historic walking route is waiting for its story to be told. Check back soon for a detailed description of the path, terrain, and journey.', help_text='Full description of the walking route and experience', verbose_name='Description')),
                ('latitude', models.FloatField(default=50.259291, help_text='Latitude coordinate of the walk location', verbose_name='Latitude')),
                ('longitude', models.FloatField(default=-5.051355, help_text='Longitude coordinate of the walk location', verbose_name='Longitude')),
                ('highlights', models.TextField(default="Details about this walk's highlights to be added.", help_text='Key features and points of interest along the walk', verbose_name='Highlights')),
                ('points_of_interest', models.TextField(blank=True)),
                ('route_geometry', django.contrib.gis.db.models.fields.GeometryField(help_text='Geographic route of the walk', srid=4326)),
                ('os_explorer_reference', models.CharField(blank=True, help_text='Ordnance Survey Explorer map reference', max_length=255, null=True, verbose_name='OS Explorer Map')),
                ('distance', models.FloatField(default=0.0, help_text='Distance of the walk in kilometers.')),
                ('steepness_level', models.CharField(choices=[('NOVICE WANDERER', 'Novice Wanderer'), ("GREY'S PATHFINDER", "Grey's Pathfinder"), ('TRAIL RANGER', 'Trail Ranger'), ("WARDEN'S ASCENT", "Warden's Ascent"), ('MASTER WAYFARER', 'Master Wayfarer')], db_index=True, default='NOVICE', help_text='Difficulty level based on steepness', max_length=20, verbose_name='Steepness Level')),
                ('footwear_category', models.CharField(choices=[('Walking Boots', 'Walking Boots'), ('Walking Shoes / Wellies', 'Walking Shoes / Wellies'), ('Waterproof Boots', 'Waterproof Boots')], db_index=True, default='WALKING_BOOTS', help_text='Recommended footwear for this walk', max_length=50, verbose_name='Footwear Category')),
                ('recommended_footwear', models.TextField(blank=True, default='Sturdy walking boots recommended for most conditions', help_text='Detailed footwear recommendations for this walk', verbose_name='Recommended Footwear')),
                ('has_pub', models.BooleanField(default=False)),
                ('pubs_list', models.JSONField(blank=True, default=list)),
                ('trail_considerations', models.TextField(default='No trail considerations provided.', help_text='Considerations for the trail.')),
                ('rewritten_trail_considerations', models.TextField(blank=True, default="Adventurer's Notes:\n- Path suitable for most wanderers\n- Consult local wisdom for seasonal conditions\n- Carry provisions as befits your journey", help_text='Trail considerations rewritten in mystical style', verbose_name='Mystical Trail Notes')),
                ('has_stiles', models.BooleanField(default=False)),
                ('has_cafe', models.BooleanField(default=False)),
                ('has_bus_access', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('adventure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='walks', to='walks.adventure')),
                ('related_categories', tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, force_lowercase=True, help_text='Categories related to this walk', space_delimiter=False, to='walks.walkcategorytag')),
            ],
            options={
                'verbose_name': 'walk',
                'verbose_name_plural': 'walks',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['walk_id'], name='walks_walk_walk_id_idx'), models.Index(fields=['walk_name'], name='walks_walk_walk_name_idx'), models.Index(fields=['distance'], name='walks_walk_distance_idx'), models.Index(fields=['created_at'], name='walks_walk_created_at_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='adventure',
            index=models.Index(fields=['difficulty_level'], name='walks_adv_diff_lvl_idx'),
        ),
        migrations.AddIndex(
            model_name='adventure',
            index=models.Index(fields=['start_date', 'end_date'], name='walks_adv_start_end_idx'),
        ),
    ]
